<?xml version="1.0"?>
################################################################################################################
################################################################################################################
##
##  Name: Review Details Per Item.vm
##
##  Description: Context Based (Project Tree).
##               - Run on a collection of items that are present on reviews. 
##               - The report displays item ID, Name, Review ID, Review Name, Review Version, Review Status, 
##                 Close Date, # of Approvers, # of Items, Users who Approved the review, Users who
##                 Rejected the Review, # of Approvals, # of Rejections, and # of Comments per review. 
##               - The report will build an excel file where each row is data on a review the item is a part of.
##               - If item does not have any reviews then a row with only item ID and name will generate.
##               - If report parameter is true then the item row will only generate data for the latest review.
##               - Report omits deleted reviews from the generated list.
##               - Cell styled green if approvers and approval count matches.
##               - Cell styled red if the latest review has a rejection.
##
##
## ============================================================================================================##
##  HISTORY
##--------------------------------------------------------------------------------------------------------------
##
##  Date         Revision    Person            Comments
##  -----------  ---------   ----------------  ----------------------------------
##  2022-01-13   1.0         Liam Rotchford    - Report based upon specifications as shown in the description above.
##  2022-01-14   1.1         Liam Rotchford    - Added Item type key column per item after the ID column.
##  2022-05-06   1.2         Liam Rotchford    - Removed omitted item types conditional to ensure all items in the context
##                                               are included.
##                                             - Adjusted report to use the document items documentKey instead of the API ID. 
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Features
#########################################################################################################################
##
##  o Output Type:                Excel
##  o Context Sensitive:          True
##
##
##
##
#########################################################################################################################
#########################################################################################################################
##
##  Jama Configuration Requirements
#########################################################################################################################
##
##  o Export Location Type:
##      - Project Tree:           True
##      - Baseline:               False
##
##  o Valid Export Location Types:
##      - Project:                True
##      - Component:              True
##      - Set:                    True
##      - Folder:                 True
##
##      * Note: If item does not have any reviews then a row containing only the item ID and name will be created
##      * Note: User running report must have access to the Review for it to show up in report.
##
#########################################################################################################################
#########################################################################################################################
##
##  Installation Instructions
#########################################################################################################################
##
## Add a new report in Jama with the following options:
##  - Report Name:            Review Details Per Item
##  - Report Type:            Velocity
##  - Report Formats:         Microsoft Excel
##  - Report File Name:       Review Details Per Item.vm
##  - Scope:                  Organization
##  - Organization:           Select yours
##  - Visible to Users:       True
##  - Context Sensitive:      True
##  - Criteria / Parameters:
##    Type:     Display Name:                   Report Global Variable:
##    ------------------------------------------------------------------
##    Boolean   Show Items Latest Review Only   reportLatestReview
##
#########################################################################################################################
#########################################################################################################################
##
##  Instructions for Customizing
#########################################################################################################################
##
##  1. Locate the section named STYLES
##  2. Update style classes based on XML style guide to affect xml tag objects with matching class
##  3. Location the section named MACROS
##  4. Create a macro for the new item types at the end of the list of macros. Use the existing macros as examples.
##
#########################################################################################################################
#########################################################################################################################
##
##  Report Table of Contents
#########################################################################################################################
##
##  1. DATA SOURCES
##  2. STYLES
##  3. MACROS
##  4. REPORT CONTENT
##
#########################################################################################################################
##















#########################################################################################################################
#########################################################################################################################
##
##  1. DATA SOURCES
##
#########################################################################################################################
#########################################################################################################################

#########################################################################################################################
#########################################################################################################################
##
## Data Sources available without declaration
##-------------------------------------------
## $project
## $documentList
## $baseUrl
##
## Data Sources loaded for this report
##-------------------------------------------
#if( $documentSource ) ##
  ## Jama 8.44 or greater
  ## Jama 8.42 if New Velocity Feature Flag Enabled
  #set( $docDao = $documentSource )
  #set( $documentNodeDao = $documentSource )
  #set( $attachmentDao = $documentSource )
  #set( $attachmentService = $documentSource )
  #set( $relDao = $documentSource )
  #set( $versionDao = $documentSource )
  #set( $testRunDao = $testSource )
  #set( $velocityServiceWrapper = $documentSource )
  #set( $baselineDao = $baselineSource )
  #set( $relationshipTypeDao = $documentSource )
  #set( $commentDao = $commentSource )
  #set( $revisionDao = $reviewSource )
##
#else
  ## Jama 8.43 or older
  #set( $docDao = $applicationContext.getBean("documentDao") )
  #set( $documentNodeDao = $applicationContext.getBean("documentNodeDao"))
  #set( $attachmentDao = $applicationContext.getBean("attachmentDao"))
  #set( $attachmentService = $applicationContext.getBean("attachmentService"))
  #set( $relDao = $applicationContext.getBean("relationshipDao") )
  #set( $versionDao = $applicationContext.getBean("versionDao") )
  #set( $testRunDao = $applicationContext.getBean("testRunDao") )
  ## $velocityServiceWrapper is already available
  #set( $baselineDao = $applicationContext.getBean("baseLineDao") )
  #set( $relationshipTypeDao = $applicationContext.getBean("relationshipTypeDao") )
  #set( $commentDao = $applicationContext.getBean("commentDao") )
  #set( $revisionDao = $applicationContext.getBean("reviewDao"))
##
#end
##
## Report Parameters
##-------------------------------------------
#if( $reportBaseline )
  #set( $baselineMode = $reportBaseline )
#else
  #set( $baselineMode = false )
#end
#########################################################################################################################
## **********************************************************************************************************************
##
##  2. CONSTANTS
##
##  >>>> Modify global constants for the report here <<<<
##
## **********************************************************************************************************************
#########################################################################################################################
#set( $cmpKey = "CMP") ##
#set( $setKey = "SET") ##
#set( $fldKey = "FLD") ##
#set( $txtKey = "TXT") ##
#set( $specKey = "CHSP") ##
#set( $objectTypeField = "object_type" ) ##
#set( $timeZone = "America/Denver" ) ##

#########################################################################################################################
#########################################################################################################################
#########################################################################################################################

<?mso-application progid="Excel.Sheet"?>
<Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:o="urn:schemas-microsoft-com:office:office"
 xmlns:x="urn:schemas-microsoft-com:office:excel"
 xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet"
 xmlns:html="http://www.w3.org/TR/REC-html40">
 <DocumentProperties xmlns="urn:schemas-microsoft-com:office:office">
  <LastAuthor>Microsoft Office User</LastAuthor>
  <Created>2021-07-13T18:45:34Z</Created>
  <LastSaved>2021-07-13T20:33:15Z</LastSaved>
  <Version>16.00</Version>
 </DocumentProperties>
 <OfficeDocumentSettings xmlns="urn:schemas-microsoft-com:office:office">
  <AllowPNG/>
 </OfficeDocumentSettings>
 <ExcelWorkbook xmlns="urn:schemas-microsoft-com:office:excel">
  <WindowHeight>16440</WindowHeight>
  <WindowWidth>27240</WindowWidth>
  <WindowTopX>32767</WindowTopX>
  <WindowTopY>8220</WindowTopY>
  <DoNotCalculateBeforeSave/>
  <ProtectStructure>False</ProtectStructure>
  <ProtectWindows>False</ProtectWindows>
 </ExcelWorkbook>












#########################################################################################################################
#########################################################################################################################
##
##  2. STYLES
##
#########################################################################################################################
#########################################################################################################################

 <Styles>
  <Style ss:ID="Default" ss:Name="Normal">
   <Alignment ss:Vertical="Bottom"/>
   <Borders/>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"/>
   <Interior/>
   <NumberFormat/>
   <Protection/>
  </Style>
  <Style ss:ID="s22" ss:Name="40% - Accent1">
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"/>
   <Interior ss:Color="#B4C6E7" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s64">
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
   </Borders>
  </Style>
  <Style ss:ID="s65" ss:Parent="s22">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"
    ss:Bold="1"/>
   <Interior ss:Color="#DBDBDB" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s66" ss:Parent="s22">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"
    ss:Bold="1"/>
   <Interior ss:Color="#DBDBDB" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s67">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
  </Style>
  <Style ss:ID="s68">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
  </Style>
  <Style ss:ID="s69">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <NumberFormat ss:Format="[$-409]m/d/yy\ h:mm\ AM/PM;@"/>
  </Style>
  <Style ss:ID="s70">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Interior ss:Color="#C6E0B4" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s71">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Interior ss:Color="#F8CBAD" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s72">
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
   </Borders>
   <Interior ss:Color="#FFFFFF" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s73">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Interior ss:Color="#D9D9D9" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s74">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center" ss:WrapText="1"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Interior ss:Color="#D9D9D9" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s75" ss:Parent="s22">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"
    ss:Bold="1"/>
   <Interior ss:Color="#BDD7EE" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s76" ss:Parent="s22">
   <Alignment ss:Horizontal="Left" ss:Vertical="Center"/>
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#000000"/>
   </Borders>
   <Font ss:FontName="Calibri" x:Family="Swiss" ss:Size="12" ss:Color="#000000"
    ss:Bold="1"/>
   <Interior ss:Color="#BDD7EE" ss:Pattern="Solid"/>
  </Style>
  <Style ss:ID="s77">
   <Borders>
    <Border ss:Position="Bottom" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Left" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Right" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
    <Border ss:Position="Top" ss:LineStyle="Continuous" ss:Weight="1"
     ss:Color="#FFFFFF"/>
   </Borders>
   <Interior ss:Color="#BDD7EE" ss:Pattern="Solid"/>
  </Style>
 </Styles>





















#########################################################################################################################
#########################################################################################################################
##
##  3. MACROS
##
#########################################################################################################################
#########################################################################################################################




#########################################################################################################################
##          Macro: getContainer
##          Inputs: $baselineMode - boolean: user selected.  tells the report if the export was from a baseline or not
##          Creates: $containerDoc - document: creates $containerDoc to used for the remainder of the report
#########################################################################################################################
#macro( getContainer $baselineMode )
##
  #set( $firstDocInList = $documentList[0].document )
  #set( $firstDocInListTypeKey = $firstDocInList.documentType.documentTypeKey )
##
  ## export from a baseline
  #if( $baselineMode )
    #### Debug: Baseline Mode
    ## baseline of a set or component will include the set or component as the first item
    #if( $firstDocInListTypeKey == $cmpKey ||
         $firstDocInListTypeKey == $setKey )
      #set( $containerDoc = $firstDocInList )
    ## if the first item is not a set or component, then the baseline is of a filter
    ## and a meaningful parent is not available
    #else
      #set( $containerDoc = false )
    #end
##
  ## export from the project explorer
  #else
    #### Debug: Non-Baseline Mode
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $documentList[0].document.id) )
    #set( $parentNode = $docNode.getParentNode())
    ## ## Debug: $parentNode.sequence
    ## if the parent is the projec, then assume the user exported from a baseline and forgot
    ## to select Baseline Mode, otherwise get the parent
    #if( $parentNode.globalSortOrder == 1000 )
      #if( $firstDocInListTypeKey == $cmpKey ||
           $firstDocInListTypeKey == $setKey )
        #set( $containerDoc = $firstDocInList )
      #else
        #set( $containerDoc = false )
      #end
    #else
      #set( $parentDoc = $docDao.getDocument($parentNode.refId) )
      #set( $parentTypeKey = $parentDoc.documentType.documentTypeKey )
      #### Debug: $parentTypeKey
      #if( $parentTypeKey == $cmpKey ||
           $parentTypeKey == $setKey )
        #set( $containerDoc = $parentDoc )
      #else
        #set( $containerDoc = false )
      #end
    #end
  #end
#end
#########################################################################################################################
##

#########################################################################################################################
##          Macro: getRelationships
##          Inputs: $baselineMode - GLOBAL, tells the report if the export was from a baseline or not
##                  $baselineId - GLOBAL, ID of a baseline
##                  $inDoc - current item
##                  $inDownstream - true provides downstream relationships, false provides upstream relationships
##          Creates: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type
##                   item
#########################################################################################################################
#macro( getRelationships $inDoc $inDownstream )
  #set( $returnRels = [] )
  #if( $baselineMode )
    #if( $baselineId )
      #set( $currentVersion = $inDoc.currentVersion )
      #set( $orginDocId = $currentVersion.originDocument.id )
      #set( $relatedIds = [] )
      #getBaselineRelationships303( $orginDocId, $baselineId ) ## Creates $returnBaselineRels
      ##DEBUG $returnBaselineRels
      #foreach ( $rel in $returnBaselineRels )
        #set($dnDoc = $rel.toItem)
        #set($upDoc = $rel.fromItem)
        #set($relationshipType = $rel.relationshipType )
        #if( $inDownstream )  ## Get Downstream Relationships
          #if( $upDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($dnDoc.id) )
              #set( $success = $relatedIds.add($dnDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc,"relationshipType":$relationshipType} ) )
            #end
          #end
        #else                 ## Get Upstream Relationships
          #if( $dnDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($upDoc.id) )
              #set( $success = $relatedIds.add($upDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc,"relationshipType":$relationshipType} ) )
            #end
          #end
        #end
      #end
    #end
  #else
    #set( $rels = [] )
    #set ( $rels = $relDao.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add({"fromDocument":$rel.fromDocument,"toDocument":$rel.toDocument,"relationshipType":$rel.relationshipType.name}) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add({"fromDocument":$rel.fromDocument,"toDocument":$rel.toDocument,"relationshipType":$rel.relationshipType.name}) )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getReferenceableDocIds
##          Input: documentList
##          Output: getReferenceableDocIds303 - list of all the doc IDs that will be referenceable in the document
#########################################################################################################################
#macro( getReferenceableDocIds )
  #set( $referenceableDocIds = [] )
  #set( $figureList = [] )
  #set( $tableList = [] )
  #set( $equationList = [] )
  #set( $figure_number = 1 )
  #set( $table_number = 1 )
  #set( $equation_number = 1 )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document )
    #set( $success = $referenceableDocIds.add($doc.id) )
    #getObjectType303( $doc) ## creates $docObjectType, false if there is none
    #if( $docObjectType == $figureObjectType )
      #set( $success = $figureList.add( {"id":$doc.id,"reference":$figure_number} ) )
      #set($figure_number = $figure_number + 1)
    #end
    #if( $docObjectType == $tableObjectType )
      #set( $success = $tableList.add( {"id":$doc.id,"reference":$table_number} ) )
      #set($table_number = $table_number + 1)
    #end
    #if( $docObjectType == $equationObjectType )
      #set( $success = $equationList.add( {"id":$doc.id,"reference":$equation_number} ) )
      #set($equation_number = $equation_number + 1)
    #end
  #end
#end
#########################################################################################################################
##
#########################################################################################################################
##          Macro: getDocumentInfo
##          Input: documentList
##          Output: documentPropertyIds - list of all document information items found
##                  $templateNumber - template revision number
##                  $apnNumber - document APN number
##                  $ecoNumber - document ECO number
##                  $revisionTable - revision table contents
#########################################################################################################################
#macro( getDocumentInfo )
  #set( $documentPropertyIds = [] )
  #set( $headerTable = "" )
  #foreach( $vDoc in $documentList )
    #set( $doc = $vDoc.document)
    #if( $doc.documentType.documentTypeKey == "SET" ||
         $doc.documentType.documentTypeKey == "FLD" ||
         $doc.documentType.documentTypeKey == "TXT")
      #if( $doc.name == "DOCUMENT_INFO" )
        #set( $success = $documentPropertyIds.add($doc.id) )
      #end
    #end
    #if( $doc.documentType.documentTypeKey == "TXT" )
      #if( $doc.name == "HEADER_TABLE" )
        #set( $headerTable = $doc.description )
      #end
      #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id) )
      #set( $parentNode = $docNode.getParentNode() )
      #if( $documentPropertyIds.contains($parentNode.refId) )
        #set( $success = $documentPropertyIds.add($doc.id) )
      #end
    #end
    ## Determine Number of worksheets
    #if( !$worksheetTotal) #set( $worksheetTotal = 1 ) #end
    #if( ($doc.documentType.documentTypeKey == "SET" ||
       $doc.documentType.documentTypeKey == "TXT") &&
       !$documentPropertyIds.contains($doc.id) )
      #set( $worksheetTotal = $worksheetTotal + 1 )
    #end
  #end
#end
#########################################################################################################################
##

#########################################################################################################################
##          Macro: getHierarchyLevel
##          Input: $doc - document object
##                 $baselineMode - true: export was from a baseline, false: export was from the project
##                 $baselineId   - ID of the baseline that the items are part of, if in baseline mode
##          Output: $hierarchyLevel - number, which heading level this item is in Jama relative to the container
#########################################################################################################################
#macro( getHierarchyLevel $doc)
  #set( $seqSubStrings = [] )
  #set( $hierarchyLevel = 1)
  ## Get hierarchy from the baseline
  #if( $baselineMode )
    #set( $docNode = $documentNodeDao.getDocumentNodeForBaseLine(5, $doc.id, $baselineId))
  ## Get hierarchy from the project
  #else
    #set( $docNode = $documentNodeDao.getDocumentNode(5, $doc.id))
  #end
  ##Debug: $docNode
  #set( $seqSubStrings = $docNode.sequence.split("\."))
  ##Debug: $seqSubStrings
  #set( $hierarchyLevel = $seqSubStrings.size())
  #if( !$hierarchyLevelTop )
    #set($hierarchyLevelTop = $hierarchyLevel)
  #end
  #set($hierarchyLevel = $hierarchyLevel - $hierarchyLevelTop + 1)
#end
#########################################################################################################################
##          Macro: getStatus
##          Input: $doc - document object
##          Output: $docStatus - status of the item
#########################################################################################################################
#macro( getStatus $doc )
  #set( $docStatus = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == "status" )
      #set ( $docStatus = $doc.status.name )
      #break
    #end
  #end
#end
#########################################################################################################################
##          Macro: getObjectType
##          Input: $doc - document object
##          Output: $docObjectType - value of object_type
#########################################################################################################################
#macro( getObjectType $doc )
  #set( $docObjectType = false )
  #foreach( $docTypeField in $doc.documentType.documentTypeFields )
    #if( $docTypeField.documentField.name == $objectTypeField )
      #set ( $docObjectType = $velocityReportUtil.getValueForField($doc, $objectTypeField, $dateFormat ) )
      #break
    #end
  #end
#end

#########################################################################################################################
##
#########################################################################################################################
##          Macro: getRelationships
##          Inputs: $baselineMode - GLOBAL, tells the report if the export was from a baseline or not
##                  $baselineId - GLOBAL, ID of a baseline
##                  $inDoc - current item
##                  $inDownstream - true provides downstream relationships, false provides upstream relationships
##          Creates: $returnRels - list of relationships with sub-elements of "fromItem" and "toItem" each of type
##                   item
#########################################################################################################################
#macro( getRelationships $inDoc $inDownstream )
  #set( $returnRels = [] )
  #if( $baselineMode )
    #if( $baselineId )
      #set( $currentVersion = $inDoc.currentVersion )
      #set( $orginDocId = $currentVersion.originDocument.id )
      #set( $relatedIds = [] )
      #getBaselineRelationships( $orginDocId, $baselineId ) ## Creates $returnBaselineRels
      #foreach ( $rel in $returnBaselineRels )
        #set($dnDoc = $rel.toItem)
        #set($upDoc = $rel.fromItem)
        #if( $inDownstream )  ## Get Downstream Relationships
          #if( $upDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($dnDoc.id) )
              #set( $success = $relatedIds.add($dnDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #else                 ## Get Upstream Relationships
          #if( $dnDoc.id == $inDoc.id )
            #if( !$relatedIds.contains($upDoc.id) )
              #set( $success = $relatedIds.add($upDoc.id) )
              #set( $success = $returnRels.add( {"fromDocument":$upDoc,"toDocument":$dnDoc} ) )
            #end
          #end
        #end
      #end
    #end
  #else
    #set( $rels = [] )
    #set ( $rels = $relDao.getRelationshipsForDocument($inDoc.id, $inDownstream) )
    #foreach( $rel in $rels )
      #if( $inDownstream )  ## Get Downstream Relationships
        #if ( $rel.toDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #else                 ## Get Upstream Relationships
        #if ( $rel.fromDocument.active )
          #set( $success = $returnRels.add( $rel ) )
        #end
      #end
    #end
  #end
#end
#########################################################################################################################
##

#########################################################################################################################
##          Macro: getDateTime
##          Input: Java Time Zone ID to determine which timezone to display the date in
##          Output: Formatted date in the desired timezone
#########################################################################################################################
#macro( getDate $inputDate $inputTimeZone )
  #set( $outTz = $dateTool.getTimeZone().getTimeZone($inputTimeZone) )
  #set( $locale = $dateTool.getLocale() )
  $dateTool.format( 'short', $inputDate, $locale, $outTz )
#end
#########################################################################################################################

#########################################################################################################################
#########################################################################################################################
##          Macro: formatRichTextCell
##          Input: $inString - input string
##          Return: string, ready for opening in Word
#########################################################################################################################
#macro( formatRichText $inString )
  #if( $inString )
    #set( $string = $inString.toString() )
    ## clear all span satements to remove character formatting
    #set( $string = $string.replaceAll("<span.*?>",""))
    #set( $string = $string.replaceAll("<\/span>",""))
    #set( $string = $string.replaceAll("<div.*?>",""))
    #set( $string = $string.replaceAll("<\/div>",""))
    ## Remove content that doesn't work well in Excel
    #set( $string = $string.replaceAll("(?s)<table.*>.*</table>",""))
    #set( $string = $string.replaceAll("(?s)<a.*>(.*)</a>","$1"))
    #set( $string = $string.replaceAll("\xA0",""))

    #set( $string = $string.replaceAll("<p>&nbsp;<\/p>","&#10;&#10;"))
    #set( $string = $string.replaceAll("<p>-","<p>&#10;-"))
    #set( $string = $string.replaceAll("&nbsp;<\/p>","&#10;<\/p>"))
    #set( $string = $string.replaceAll("<p>(.*?)<\/p>","$1&#10;"))

    #set( $string = $string.replaceAll("<br>","&#10;"))
    #set( $string = $string.replaceAll("<br />","&#10;"))
    #set( $string = $string.replaceAll("<br/>","&#10;"))

    #set( $string = $string.replaceAll("<ul>",""))
    #set( $string = $string.replaceAll("<\/ul>",""))
    #set( $string = $string.replaceAll("<ol>",""))
    #set( $string = $string.replaceAll("<\/ol>",""))

    #set( $string = $string.replaceAll("<li.*?>","-"))
    #set( $string = $string.replaceAll("<\/li>","&#10;"))

    #set( $string = $string.replaceAll("<img.*?>",""))
    #set( $string = $string.replaceAll("<strong>","<B>"))
    #set( $string = $string.replaceAll("<\/strong>","</B>"))

    $string

  #end
#end

#########################################################################################################################
#########################################################################################################################
## Row Builder (Style Selector)

#macro( rowBuilder $doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck $currentItem $prevItem $prevStyle)

  ## Row building (Alternating styles per item group)
    #if($currentItem != $prevItem) ## Check if the next item we bring up is a different ID, if it is then move to alternate style

      #if($prevStyle == "Light")
        #set($prevStyle = "Dark")
        #rowStyleDark($doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)

      #else
        #set($prevStyle = "Light")
        #rowStyleLight($doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)

      #end

    #else
      #if($reportLatestReview == false)
        #if($prevStyle == "Light")
          #rowStyleLight($doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)
        #else
          #rowStyleDark($doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)
        #end
      #end

    #end

    #set($prevItem = $currentItem)

#end

#########################################################################################################################
#########################################################################################################################

## Darker Style

#macro( rowStyleDark $doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)

  <Row ss:AutoFitHeight="1" ss:StyleID="s72"> ## Print Review details

    ## ITEM ID
    <Cell ss:StyleID="s73"><Data ss:Type="Number">$doc.documentKey</Data></Cell>

    ## ITEM TYPE KEY
    <Cell ss:StyleID="s74"><Data ss:Type="String">$docTypeKey</Data></Cell>

    ## ITEM NAME
    <Cell ss:StyleID="s74"><Data ss:Type="String">$doc.name</Data></Cell>

    ## REVIEW ID
    <Cell ss:StyleID="s74"><Data ss:Type="Number">$!review.id</Data></Cell>

    ## REVIEW NAME
    <Cell ss:StyleID="s74"><Data ss:Type="String">$!review.name</Data></Cell>

    ## REVIEW VERSION NUMBER
    #set($revisionVersion = "V${revision.sequenceNumber}")
    <Cell ss:StyleID="s74"><Data ss:Type="String">$revisionVersion</Data></Cell>

    ## REVIEW STATUS
    <Cell ss:StyleID="s74"><Data ss:Type="String">$!revision.status.name</Data></Cell>

    ## REVIEW END DATE
    #set($reviewEndDate = "#getDate($revision.endDate, $timeZone)")
    #set($reviewEndDate = $reviewEndDate.replaceAll(","," "))
    <Cell ss:StyleID="s74"><Data ss:Type="String">$!reviewEndDate</Data></Cell>

    ## TOTAL # OF APPROVERS
    <Cell ss:StyleID="s74"><Data ss:Type="Number">$approverCount</Data></Cell>

    ## TOTAL # OF REVIEW ITEMS
    <Cell ss:StyleID="s74"><Data ss:Type="Number">$revisionItemCount</Data></Cell>

    ## APPROVAL USERS
    <Cell ss:StyleID="s74"><Data ss:Type="String">#foreach($user in $usersApprovalGiven)#if(!$foreach.last)$user, #else$user#end#end</Data></Cell>

    ## REJECT USERS
    <Cell ss:StyleID="s74"><Data ss:Type="String">#foreach($user in $usersRejectGiven)#if(!$foreach.last)$user, #else$user#end#end</Data></Cell>

    ## # APPROVALS
    #if($approverCount == $approvalCount)
      <Cell ss:StyleID="s70"><Data ss:Type="Number">$approvalCount</Data></Cell>
    #else
      <Cell ss:StyleID="s74"><Data ss:Type="Number">$approvalCount</Data></Cell>
    #end

    ## # REJECTIONS
    #if($rejectCheck && $rejectionCount != 0)
      <Cell ss:StyleID="s71"><Data ss:Type="Number">$rejectionCount</Data></Cell>
    #else
      <Cell ss:StyleID="s74"><Data ss:Type="Number">$rejectionCount</Data></Cell>
    #end

    ## # COMMENTS
    <Cell ss:StyleID="s74"><Data ss:Type="Number">$commentCount</Data></Cell>

  </Row>

#end



#########################################################################################################################
#########################################################################################################################
## Lighter Style

#macro( rowStyleLight $doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $rejectCheck)

  <Row ss:AutoFitHeight="1"> ## Print Review details

    ## ITEM ID
    <Cell ss:StyleID="s67"><Data ss:Type="Number">$doc.documentKey</Data></Cell>

    ## ITEM TYPE KEY
    <Cell ss:StyleID="s68"><Data ss:Type="String">$docTypeKey</Data></Cell>

    ## ITEM NAME
    <Cell ss:StyleID="s68"><Data ss:Type="String">$doc.name</Data></Cell>

    ## REVIEW ID
    <Cell ss:StyleID="s68"><Data ss:Type="Number">$!review.id</Data></Cell>

    ## REVIEW NAME
    <Cell ss:StyleID="s68"><Data ss:Type="String">$!review.name</Data></Cell>

    ## REVIEW VERSION NUMBER
    #set($revisionVersion = "V${revision.sequenceNumber}")
    <Cell ss:StyleID="s68"><Data ss:Type="String">$revisionVersion</Data></Cell>

    ## REVIEW STATUS
    <Cell ss:StyleID="s68"><Data ss:Type="String">$!revision.status.name</Data></Cell>

    ## REVIEW END DATE
    #set($reviewEndDate = "#getDate($revision.endDate, $timeZone)")
    #set($reviewEndDate = $reviewEndDate.replaceAll(","," "))
    <Cell ss:StyleID="s68"><Data ss:Type="String">$!reviewEndDate</Data></Cell>

    ## TOTAL # OF APPROVERS
    <Cell ss:StyleID="s68"><Data ss:Type="Number">$approverCount</Data></Cell>

    ## TOTAL # OF REVIEW ITEMS
    <Cell ss:StyleID="s68"><Data ss:Type="Number">$revisionItemCount</Data></Cell>

    ## APPROVAL USERS
    <Cell ss:StyleID="s68"><Data ss:Type="String">#foreach($user in $usersApprovalGiven)#if(!$foreach.last)$user, #else$user#end#end</Data></Cell>

    ## REJECT USERS
    <Cell ss:StyleID="s68"><Data ss:Type="String">#foreach($user in $usersRejectGiven)#if(!$foreach.last)$user, #else$user#end#end</Data></Cell>

    ## # APPROVALS
    #if($approverCount == $approvalCount)
      <Cell ss:StyleID="s70"><Data ss:Type="Number">$approvalCount</Data></Cell>
    #else
      <Cell ss:StyleID="s68"><Data ss:Type="Number">$approvalCount</Data></Cell>
    #end

    ## # REJECTIONS
    #if($rejectCheck && $rejectionCount != 0)
      <Cell ss:StyleID="s71"><Data ss:Type="Number">$rejectionCount</Data></Cell>
    #else
      <Cell ss:StyleID="s68"><Data ss:Type="Number">$rejectionCount</Data></Cell>
    #end

    ## # COMMENTS
    <Cell ss:StyleID="s68"><Data ss:Type="Number">$commentCount</Data></Cell>

</Row>

#end

#########################################################################################################################
#########################################################################################################################

#macro( emptyRow $doc $docTypeKey $style)

  #if($style == "Dark")
    <Row ss:StyleID="s72"> ## Print Review details
      ## ITEM ID
      <Cell ss:StyleID="s73"><Data ss:Type="Number">$doc.documentKey</Data></Cell>
      ## ITEM TYPE KEY
      <Cell ss:StyleID="s74"><Data ss:Type="String">$docTypeKey</Data></Cell>
      ## ITEM NAME
      <Cell ss:StyleID="s74"><Data ss:Type="String">$doc.name</Data></Cell>
      ## REVIEW ID
      <Cell ss:StyleID="s74"/>
      ## REVIEW NAME
      <Cell ss:StyleID="s74"/>
      ## REVIEW VERSION NUMBER
      <Cell ss:StyleID="s74"/>
      ## REVIEW STATUS
      <Cell ss:StyleID="s74"/>
      ## REVIEW END DATE
      <Cell ss:StyleID="s74"/>
      ## TOTAL # OF APPROVERS
      <Cell ss:StyleID="s74"/>
      ## TOTAL # OF REVIEW ITEMS
      <Cell ss:StyleID="s74"/>
      ## APPROVAL USERS
      <Cell ss:StyleID="s74"/>
      ## REJECT USERS
      <Cell ss:StyleID="s74"/>
      ## # APPROVALS
      <Cell ss:StyleID="s74"/>
      ## # REJECTIONS
      <Cell ss:StyleID="s74"/>
      ## # COMMENTS
      <Cell ss:StyleID="s74"/>
    </Row>
  #else
    <Row> ## Print Review details
      ## ITEM ID
      <Cell ss:StyleID="s67"><Data ss:Type="Number">$doc.documentKey</Data></Cell>
      ## ITEM TYPE KEY
      <Cell ss:StyleID="s68"><Data ss:Type="String">$docTypeKey</Data></Cell>
      ## ITEM NAME
      <Cell ss:StyleID="s68"><Data ss:Type="String">$doc.name</Data></Cell>
       ## REVIEW ID
      <Cell ss:StyleID="s68"/>
      ## REVIEW NAME
      <Cell ss:StyleID="s68"/>
      ## REVIEW VERSION NUMBER
      <Cell ss:StyleID="s68"/>
      ## REVIEW STATUS
      <Cell ss:StyleID="s68"/>
      ## REVIEW END DATE
      <Cell ss:StyleID="s68"/>
      ## TOTAL # OF APPROVERS
      <Cell ss:StyleID="s68"/>
      ## TOTAL # OF REVIEW ITEMS
      <Cell ss:StyleID="s68"/>
      ## APPROVAL USERS
      <Cell ss:StyleID="s68"/>
      ## REJECT USERS
      <Cell ss:StyleID="s68"/>
      ## # APPROVALS
      <Cell ss:StyleID="s68"/>
      ## # REJECTIONS
      <Cell ss:StyleID="s68"/>
      ## # COMMENTS
      <Cell ss:StyleID="s68"/>
    </Row>
  #end

#end

#########################################################################################################################
#########################################################################################################################
## Check if this review is in exclusion list as it's been deleted

#macro( exclusionListCheck $reviewID $exclusionList)

  #set($omitResult = "false")

  #foreach($excludedID in $exclusionList)
    #if($excludedID == $reviewID)
      #set($omitResult = "true")
    #end
  #end

  $omitResult

#end


#########################################################################################################################
#########################################################################################################################
## Check if Revision is Active (I.e it's latest version isn't deleted or archived)

#macro( checkRevisionsStatus $reviewID $review $exclusionList)

  #set($revisionsForReview = $review.revisions)

  #foreach($rev in $sortTool.sort($revisionsForReview, "createdDate:desc") )

    #if($foreach.first)
      #if($rev.status.name == "Deleted" || $rev.status.name == "Archived")
        #set( $success = $exclusionList.add($reviewID))
      #end
    #else
      #break
    #end

  #end

  $exclusionList

#end


#########################################################################################################################
#########################################################################################################################













#########################################################################################################################
#########################################################################################################################
##
##  4. REPORT CONTENT
##
#########################################################################################################################
#########################################################################################################################


#set($rowLength = 1) ## Start at 1 for the headers row

 ## Determine Row length by counting all the reviews each item is a part of
#foreach( $vDoc in $documentList )
  #set( $doc = $vDoc.document )
  #set( $versions = $documentSource.getAllVersionsByDocumentId($doc.id))
  #set( $count = 0)

  #foreach( $version in $versions )
    #set( $revisions = $reviewSource.getRevisionsForItemId($version.document.id) )

    #foreach( $revision in $revisions )
      #set( $review = $revision.review)

      #if($!review)
        #set($rowLength = $rowLength + 1)
        #set($count = $count + 1)
      #end

    #end
  #end

  #if($count == 0)
    #set($rowLength = $rowLength + 1)
  #end
#end



<Worksheet ss:Name="Review_Status_Details_Report">
 ## TABLE DEFINITION
  <Table ss:ExpandedColumnCount="43" ss:ExpandedRowCount="$rowLength" x:FullColumns="1"
   x:FullRows="1" ss:StyleID="s64" ss:DefaultColumnWidth="65">

   <Column ss:Index="2" ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="95"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="245"/>
   <Column ss:Index="5" ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="245"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="95"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="125"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="116"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="109"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="95"/>
   <Column ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="185" ss:Span="1"/>
   <Column ss:Index="13" ss:StyleID="s64" ss:AutoFitWidth="0" ss:Width="95"
    ss:Span="2"/>

   ## TABLE HEADERS
   <Row>
    <Cell ss:StyleID="s75"><Data ss:Type="String">Item ID</Data></Cell>
    <Cell ss:StyleID="s75"><Data ss:Type="String">Item Type</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Item Name</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Review ID</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Review Name</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Review Version</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Review Status</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Review Close Date</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Total # of Approvers</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Total # of Items</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Approval User</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String">Reject User</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String"># Approvals</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String"># Rejections</Data></Cell>
    <Cell ss:StyleID="s76"><Data ss:Type="String"># Comments</Data></Cell>

   </Row>

   ## CONTENT ROWS
   ###############################################

    #set($prevStyle = "Dark")
    #set($exclusionList = [])

    #foreach( $vDoc in $documentList )
      #set( $doc = $vDoc.document )
      #set( $docTypeKey = $doc.documentType.documentTypeKey)
      #set( $versions = $documentSource.getAllVersionsByDocumentId($doc.id))
      #set( $reviewCount = 0)

      #set( $currentItem = $doc.id)

      #if($foreach.first)
        #set($prevItem = $doc.id)
      #end

      #set($lastDoc = '')
      #set($lastReview = '')
      #set($lastRevision = '')
      #set($lastApproverCount = '')
      #set($lastApprovalCount = '')
      #set($lastRejectionCount = '')
      #set($lastCommentCount = '')
      #set($lastRevisionItemCount = '')
      #set($lastUsersApprovalGiven = '')
      #set($lastUsersRejectGiven = '')
      #set($lastForeach = '')
      #set($lastCurrentItem = '')
      #set($lastPrevItem = '')
      #set($lastPrevStyle = '')


      #foreach( $version in $sortTool.sort($versions, "createdDate:asc") )
        #set( $revisions = $reviewSource.getRevisionsForItemId($version.document.id) )

        #foreach( $revision in $revisions)
          #set( $reviewID = $revision.review.id.toString()) ## get revisions review ID

          #exclusionListCheck($reviewID $exclusionList)     ## Returns $omitResult ~ check if review ID has been added to the exclusion list of reviews

          #if($omitResult == "false")                       ## if the review ID is not on the exclusion list check to see if it should be (I.e it's latest revision has been deleted rendering all previous revisions as deleted (i.e don't include these in the report))
            #checkRevisionsStatus($reviewID $revision.review $exclusionList) ## returns updated $exclusionList
            #exclusionListCheck($reviewID $exclusionList)     ## check our updated exclusion list to ensure the current revision is valid or not to still be added to report
          #end

          ## If our $omitResult is still false then this revison is valid to be added to the review
          #if($omitResult == "false")

            #set( $review = $revision.review)
            #set( $revisionItems = $!revision.revisionItems)
            #set( $revisionItemCount = $revisionItems.size())
            #set( $usersApprovalGiven = [])
            #set( $usersRejectGiven = [])

            #foreach($item in $revisionItems)
              #if($item.version.document.name == $doc.name)
                #set($commentCount = $commentDao.getRevisionItemCommentCount($item.id, true))
              #end
            #end

            #if($!review)
              #set($reviewCount = $reviewCount + 1)
              #set($revisionUsers = $revision.revisionUsers)
              #set($approverCount = 0)
              #set($approvalCount = 0)
              #set($rejectionCount = 0)
              #set($commentCountTotal = 0)

              #foreach( $revisionUser in $revisionUsers )
                #set( $revItems = $revisionUser.revisionUserItems)

                #if($revisionUser.isApprover)
                    #set($approverCount = $approverCount + 1)
                #end

                #foreach( $revItem in $revItems)

                  #set( $status = $revItem.status)
                  #set( $reviewItemName = $revItem.revisionItem.version.document.name)

                  #if( $reviewItemName == $doc.name)  ## only check the approve reject counts for the particular item we are using
                    #if( $status.name == "Approved")
                      #set( $approvalCount = $approvalCount + 1)
                      #set($addUser = true)

                      #foreach($addedUser in $usersApprovalGiven)
                        #if($revisionUser.user == $addedUser)
                          #set($addUser = false)
                        #end
                      #end

                      #if($addUser)
                        #set( $success = $usersApprovalGiven.add($revisionUser.user.userName))
                      #end

                    #elseif( $status.name == "Needs More Work")
                      #set( $rejectionCount = $rejectionCount + 1)
                      #set($addUser = true)

                      #foreach($addedUser in $usersRejectGiven)
                        #if($revisionUser.user == $addedUser)
                          #set($addUser = false)
                        #end
                      #end

                      #if($addUser)
                        #set( $success = $usersRejectGiven.add($revisionUser.user.userName))
                      #end

                    #end
                  #end

                #end
              #end


              ## Row Builder for each Revision

              ## If report criteria is true then only build a row for the latest revision i.e latest review
              ## Remember data and write after the loops
              #if($reportLatestReview)

                #set($lastDoc = $doc)
                #set($lastDocKey = $docTypeKey)
                #set($lastReview = $review)
                #set($lastRevision = $revision)
                #set($lastApproverCount = $approverCount)
                #set($lastApprovalCount = $approvalCount)
                #set($lastRejectionCount = $rejectionCount)
                #set($lastCommentCount = $commentCount)
                #set($lastRevisionItemCount = $revisionItemCount)
                #set($lastUsersApprovalGiven = $usersApprovalGiven)
                #set($lastUsersRejectGiven = $usersRejectGiven)
                #set($lastForeach = $foreach.parent.last)
                #set($lastCurrentItem = $currentItem)
                #set($lastPrevItem = $prevItem)
                #set($lastPrevStyle = $prevStyle)

              ## Build a row for every review
              #else
                #rowBuilder($doc $docTypeKey $review $revision $approverCount $approvalCount $rejectionCount $commentCount $revisionItemCount $usersApprovalGiven $usersRejectGiven $foreach.parent.last $currentItem $prevItem $prevStyle)
              #end


            #end ## #if($!review)
          #end ## #if($omitResult == "false")
        #end ## #foreach( $revision in $revisions )
      #end ## #foreach( $version in $versions )


      ## If report criteria is true then only build a row for the latest revision i.e latest review
      ## Write the last entry we remembered
      #if($reportLatestReview && $!lastDoc)
        #rowBuilder($lastDoc $lastDocKey $lastReview $lastRevision $lastApproverCount $lastApprovalCount $lastRejectionCount $lastCommentCount $lastRevisionItemCount $lastUsersApprovalGiven $lastUsersRejectGiven $lastForeach $lastCurrentItem $lastPrevItem $lastPrevStyle)
      #end


      ## No reviews build empty row
      #if($reviewCount == 0)  ## If item has no reviews then print only the item id and name for the row

        #if($currentItem != $prevItem) ## Check if the next item we bring up is a different ID, if it is then move to alternate style

          #if($prevStyle == "Light")
            #set($prevStyle = "Dark")
            #emptyRow($doc $docTypeKey "Dark")

          #else
            #set($prevStyle = "Light")
            #emptyRow($doc $docTypeKey "Light")
          #end

        #else

          #if($prevStyle == "Light")
            #emptyRow($doc $docTypeKey "Light")
          #else
            #emptyRow($doc $docTypeKey "Dark")
          #end

        #end

        #set($prevItem = $currentItem)

      #end ## #if($reviewCount == 0)
      
    #end ## #foreach( $vDoc in $documentList )


  </Table>
  <WorksheetOptions xmlns="urn:schemas-microsoft-com:office:excel">
   <PageSetup>
    <Header x:Margin="0.3"/>
    <Footer x:Margin="0.3"/>
    <PageMargins x:Bottom="0.75" x:Left="0.7" x:Right="0.7" x:Top="0.75"/>
   </PageSetup>
   <Selected/>
   <DoNotDisplayGridlines/>
   <Panes>
    <Pane>
     <Number>3</Number>
     <ActiveRow>3</ActiveRow>
     <ActiveCol>3</ActiveCol>
    </Pane>
   </Panes>
   <ProtectObjects>False</ProtectObjects>
   <ProtectScenarios>False</ProtectScenarios>
  </WorksheetOptions>
 </Worksheet>
</Workbook>
